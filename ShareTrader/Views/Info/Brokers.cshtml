<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>Complete brokers view</title>
    <script src="~/Scripts/helpersApp.js"></script>
    <script language="javascript">isLoggedIn()</script>
</head>
<body>
    <h2>Get broker recommendation based on your chosen shares types!</h2>
    <button id="btn_reccomend" type="button" class="btn btn-info" style="margin-bottom : 5px">Reccomend me!</button>
    <div hidden id="reccomendedBrokers">
        <table class="table table-bordered">
            <thead style="background-color:silver">
                <tr><th scope="col">Score</th><th scope="col">First Name</th><th scope="col">Surname</th><th scope="col">Email</th><th scope="col">Phone Number</th><th scope="col">Quality Grade</th></tr>
            </thead>
            <tbody>
                <tr></tr>
            </tbody>
        </table>
    </div>
    <br/>
    <h1>The complete list of the available brokers</h1>

    <div id="brokerTable">
        <table class="table" border="1">
            <thead style="background-color:silver">
                <tr><th scope="col">First Name</th><th scope="col">Surname</th><th scope="col">Email</th><th scope="col">Phone Number</th><th scope="col">Quality Grade</th></tr>
</thead>
            <tbody>
                <tr class="loading"><td colspan="6">loading...</td></tr>
            </tbody>
        </table>
    </div>

    @section scripts{
        <script src="/Scripts/jquery.signalR-2.4.1.js"></script>

        <script src="/signalr/hubs"></script>
        <script src="~/Scripts/jquery.color-2.1.2.js"></script>
        <script src="~/Scripts/proxy-config.js"></script>

        <script>
            // Crockford's supplant method
if (!String.prototype.supplant) {
    String.prototype.supplant = function (o) {
        return this.replace(/{([^{}]*)}/g,
            function (a, b) {
                var r = o[b];
                return typeof r === 'string' || typeof r === 'number' ? r : a;
            }
        );
    };
}

//setup info to connect to controllers
var uri = "https://localhost:44309/api/";


jQuery.fn.flash = function(n, t) {
    var i = this.css("backgroundColor");
    this.animate({
        backgroundColor: "rgb(" + n + ")"
    }, t / 2).animate({
        backgroundColor: i
    }, t / 2)
};

$(function () {

    var $brokerTable = $('#brokerTable');
    var $brokerTableBody = $brokerTable.find('tbody');
    var rowTemplate = '<tr data-symbol="{Id}"><td>{FirstName}</td><td>{LastName}</td><td>{Email}</td><td>{PhoneNumber}</td><td>{QualityGrade}</td></tr>';

    var rowTemplateScore = '<tr data-symbol="{Id}"><td>{Score}</td><td>{FirstName}</td><td>{LastName}</td><td>{Email}</td><td>{PhoneNumber}</td><td>{QualityGrade}</td></tr>'
    var $brokerTableScore = $('#reccomendedBrokers');
    var $brokerTableScoreBody = $brokerTableScore.find('tbody');

    function init() {
        //set all the current stocks
        console.log("init");
        document.getElementById("btn_reccomend").onclick = getBrokerReccomendation;
        $.ajax({
            type: 'GET',
            url: uri + 'Broker',
            success: function (brokers) {
                $brokerTableBody.empty();
                $.each(brokers, function () {
                    $brokerTableBody.append(rowTemplate.supplant(this));
                })
            },
            error: function () { console.log("problem in retreiving the brokers");}
        });


    }

    // Add client-side hub methods that the server will call
$.extend(proxy.client, {
    updateBrokers: function (broker) {
        $row = $(rowTemplate.supplant(broker)),
            $brokerTableBody.find('tr[data-symbol=' + broker.Id + ']').replaceWith($row);
        $row.flash("255,255,0", 3e3);
    }
});
    // Start the connection
    $.connection.hub.start().then(init);

            function getBrokerReccomendation() {
            
            $.ajax({
            type: 'GET',
            headers : headers,
            url: uri + 'Broker/Reccomend',
                success: function (brokers) {
                    console.log(brokers);
                    $brokerTableScore.attr("hidden", false);
                    $brokerTableScoreBody.empty();
                    
                    $.each(brokers, function () {
                        $brokerTableScoreBody.append(rowTemplateScore.supplant(this));
                })
            },
            error: function () { console.log("problem in retreiving the brokers");}
        });
        }

});
        
        </script>
    }
</body>
</html>