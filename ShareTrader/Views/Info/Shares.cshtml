<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>Complete shares view</title>
    <script src="~/Scripts/helpersApp.js"></script>
    <script language="javascript">isLoggedIn()</script>
</head>
<body>
    <div>
        <label for="sharesymbol">Add your interested shares by Symbol</label>
        <input type="text" class="form-control" id="sharesymbol" placeholder="Share Symbol" aria-label="Share Symbol" aria-describedby="share-symbol">
        
        <label for="maxprice">Price Max</label>
        <input type="text" class="form-control" id="maxprice" placeholder="Optional">
        
        <label for="minprice">Price Min</label>
        <input type="text" class="form-control" id="minprice" placeholder="Optional">
        
        <button class="btn btn-outline-secondary" type="button" id="add_btn">Add</button>
    </div>

    <h1>The complete list of the available shares</h1>

    <div id="stockTable">
        <table class="table table-bordered">
            <thead style="background-color:silver">
                <tr><th scope="col">Symbol</th><th scope="col">Name</th><th scope="col">Price</th><th scope="col">Volume</th><th scope="col">High</th><th scope="col">Low</th><th scope="col">Currency</th><th scope="col">Type</th></tr>
            </thead>
            <tbody>
                <tr class="loading"><td colspan="3">loading...</td></tr>
            </tbody>
        </table>
    </div>

    @section scripts{
        <script src="/Scripts/jquery.signalR-2.4.1.js"></script>

        <script src="/signalr/hubs"></script>
        <script src="~/Scripts/jquery.color-2.1.2.js"></script>
        <script src="~/Scripts/sweetalert2.all.min.js"></script>

        <script>
            // Crockford's supplant method
            if (!String.prototype.supplant) {
                String.prototype.supplant = function (o) {
                    return this.replace(/{([^{}]*)}/g,
                        function (a, b) {
                            var r = o[b];
                            return typeof r === 'string' || typeof r === 'number' ? r : a;
                        }
                    );
                };
            }

            jQuery.fn.flash = function (n, t) {
                var i = this.css("backgroundColor");
                this.animate({
                    backgroundColor: "rgb(" + n + ")"
                }, t / 2).animate({
                    backgroundColor: i
                }, t / 2)
            };

            $(function () {
            var uri = "https://localhost:44309/api/"
                var proxy = $.connection.notificationHub; // the generated client-side hub proxy
                var $stockTable = $('#stockTable');
                var $stockTableBody = $stockTable.find('tbody');
                var rowTemplate = '<tr data-symbol="{Symbol}"><td>{Symbol}</td><td>{Name}</td><td>{Price}</td><td>{Volume}</td><td>{High}</td><td>{Low}</td><td>{Currency}</td><td>{Type}</td></tr>';

                function formatStock(stock) {
                    return $.extend(stock, {
                        Price: stock.Price.toFixed(2)
                    });
                }

                function init() {
                    document.getElementById("add_btn").onclick =
                    function () {
                        //have to pass the authorization
                        var token = sessionStorage.getItem("accessToken");
                        var headers = {};
                        if (token) {
                            headers.Authorization = 'Bearer ' + token;
                        }
                        console.log(token);
                        var data = {
                            ShareSymbol: $("#sharesymbol").val(),
                            MaxPrice: $("#maxprice").val(),
                            MinPrice : $("#minprice").val()
                        }
                        $.ajax({
                        type: 'POST',
                        data : data,
                        headers : headers,
                        url: uri + 'Interest/ShareInterest',
                        success: function (shares) {
                            Swal.fire("Share added", "Successfully added a new interest in the selected share!", "success");
                            
                            
                        },
                        error: function () { console.log("problem in retreiving the shares"); }
                    });
                    }
                    //set all the current stocks
                    console.log("init");
                    $.ajax({
                        type: 'GET',
                        url: uri + 'Share',
                        success: function (stocks) {
                            $stockTableBody.empty();
                            $.each(stocks, function () {
                                var stock = formatStock(this);
                                $stockTableBody.append(rowTemplate.supplant(stock));
                            })
                        },
                        error: function () { console.log("problem in retreiving the shares"); }
                    });


                }


                // Add client-side hub methods that the server will call
                $.extend(proxy.client, {
                    updateStockPrice: function (stock) {
                        console.log("update stockprice");
                        var displayStock = formatStock(stock);
                        $row = $(rowTemplate.supplant(displayStock)),
                            $stockTableBody.find('tr[data-symbol=' + stock.Symbol + ']').replaceWith($row);
                        $row.flash("255,255,0", 3e3);
                    }
                });

                // Start the connection
                $.connection.hub.start().then(init);
            });
        </script>
    }
</body>
</html>